commit 6bc05d7037041e543d627248ca9df90723426ce1
Author: Jakub Jelen <jjelen@redhat.com>
Date:   Tue Aug 10 16:30:40 2021 +0200

    p11test: Fix invalid format string on 32b architectures

diff --git a/src/tests/p11test/p11test.c b/src/tests/p11test/p11test.c
index dbac167d..49de6a93 100644
--- a/src/tests/p11test/p11test.c
+++ b/src/tests/p11test/p11test.c
@@ -139,7 +139,7 @@ int main(int argc, char** argv) {
 		return -1;
 	}
 
-	debug_print("Card info:\n\tPIN %s\n\tPIN LENGTH %lu\n\t",
+	debug_print("Card info:\n\tPIN %s\n\tPIN LENGTH %zu\n\t",
 		token.pin, token.pin_length);
 
 	return cmocka_run_group_tests(readonly_tests_without_initialization,
diff --git a/src/tests/p11test/p11test_case_pss_oaep.c b/src/tests/p11test/p11test_case_pss_oaep.c
index 1d876a5b..5a6ae9d0 100644
--- a/src/tests/p11test/p11test_case_pss_oaep.c
+++ b/src/tests/p11test/p11test_case_pss_oaep.c
@@ -402,7 +402,7 @@ int oaep_encrypt_decrypt_test(test_cert_t *o, token_info_t *info, test_mech_t *m
 	if (message_length < 0) {
 		mech->usage_flags &= ~CKF_DECRYPT;
 		debug_print(" [SKIP %s ] Too small modulus (%ld bits)"
-			" or too large hash %s (%lu B) for OAEP", o->id_str,
+			" or too large hash %s (%zu B) for OAEP", o->id_str,
 			o->bits, get_mechanism_name(mech->hash),
 			get_hash_length(mech->hash));
 		return 0;

